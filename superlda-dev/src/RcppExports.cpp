// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// infer_labels
Rcpp::List infer_labels(arma::sp_mat DTM, int ndocs, int nunique, int ntokens, int nelem, int T, int niter, double BETA, double ALPHA, arma::mat PCW);
RcppExport SEXP _superlda_infer_labels(SEXP DTMSEXP, SEXP ndocsSEXP, SEXP nuniqueSEXP, SEXP ntokensSEXP, SEXP nelemSEXP, SEXP TSEXP, SEXP niterSEXP, SEXP BETASEXP, SEXP ALPHASEXP, SEXP PCWSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type DTM(DTMSEXP);
    Rcpp::traits::input_parameter< int >::type ndocs(ndocsSEXP);
    Rcpp::traits::input_parameter< int >::type nunique(nuniqueSEXP);
    Rcpp::traits::input_parameter< int >::type ntokens(ntokensSEXP);
    Rcpp::traits::input_parameter< int >::type nelem(nelemSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< double >::type BETA(BETASEXP);
    Rcpp::traits::input_parameter< double >::type ALPHA(ALPHASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type PCW(PCWSEXP);
    rcpp_result_gen = Rcpp::wrap(infer_labels(DTM, ndocs, nunique, ntokens, nelem, T, niter, BETA, ALPHA, PCW));
    return rcpp_result_gen;
END_RCPP
}
// infer_topics
Rcpp::List infer_topics(arma::sp_mat DTM, int ndocs, int nunique, int ntokens, int nelem, int T, int niter, double BETA, arma::vec ALPHA, arma::mat PCW);
RcppExport SEXP _superlda_infer_topics(SEXP DTMSEXP, SEXP ndocsSEXP, SEXP nuniqueSEXP, SEXP ntokensSEXP, SEXP nelemSEXP, SEXP TSEXP, SEXP niterSEXP, SEXP BETASEXP, SEXP ALPHASEXP, SEXP PCWSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type DTM(DTMSEXP);
    Rcpp::traits::input_parameter< int >::type ndocs(ndocsSEXP);
    Rcpp::traits::input_parameter< int >::type nunique(nuniqueSEXP);
    Rcpp::traits::input_parameter< int >::type ntokens(ntokensSEXP);
    Rcpp::traits::input_parameter< int >::type nelem(nelemSEXP);
    Rcpp::traits::input_parameter< int >::type T(TSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< double >::type BETA(BETASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ALPHA(ALPHASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type PCW(PCWSEXP);
    rcpp_result_gen = Rcpp::wrap(infer_topics(DTM, ndocs, nunique, ntokens, nelem, T, niter, BETA, ALPHA, PCW));
    return rcpp_result_gen;
END_RCPP
}
// train_label_word
Rcpp::List train_label_word(arma::sp_mat DTM, arma::sp_mat DLM, int ndocs, int nunique, int ntokens, int nelem, int niter, double BETA, double ALPHA);
RcppExport SEXP _superlda_train_label_word(SEXP DTMSEXP, SEXP DLMSEXP, SEXP ndocsSEXP, SEXP nuniqueSEXP, SEXP ntokensSEXP, SEXP nelemSEXP, SEXP niterSEXP, SEXP BETASEXP, SEXP ALPHASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type DTM(DTMSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type DLM(DLMSEXP);
    Rcpp::traits::input_parameter< int >::type ndocs(ndocsSEXP);
    Rcpp::traits::input_parameter< int >::type nunique(nuniqueSEXP);
    Rcpp::traits::input_parameter< int >::type ntokens(ntokensSEXP);
    Rcpp::traits::input_parameter< int >::type nelem(nelemSEXP);
    Rcpp::traits::input_parameter< int >::type niter(niterSEXP);
    Rcpp::traits::input_parameter< double >::type BETA(BETASEXP);
    Rcpp::traits::input_parameter< double >::type ALPHA(ALPHASEXP);
    rcpp_result_gen = Rcpp::wrap(train_label_word(DTM, DLM, ndocs, nunique, ntokens, nelem, niter, BETA, ALPHA));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_superlda_infer_labels", (DL_FUNC) &_superlda_infer_labels, 10},
    {"_superlda_infer_topics", (DL_FUNC) &_superlda_infer_topics, 10},
    {"_superlda_train_label_word", (DL_FUNC) &_superlda_train_label_word, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_superlda(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
